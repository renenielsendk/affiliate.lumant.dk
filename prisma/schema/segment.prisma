model ContactList {
  id           String              @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
  name         String
  color        String?
  instructor   Instructor          @relation(fields: [instructorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  instructorId String              @db.ObjectId
  contacts     ContactListMember[]
  reference    String              @unique

  @@map("contact-lists")
}

model ContactListMember {
  id            String                  @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime                @default(now())
  updatedAt     DateTime                @updatedAt
  status        ContactListMemberStatus @default(SUBSCRIBED)
  contact       Contact                 @relation(fields: [contactId], references: [id])
  contactId     String                  @db.ObjectId
  contactList   ContactList             @relation(fields: [contactListId], references: [id])
  contactListId String                  @db.ObjectId

  @@unique([contactId, contactListId])
  @@map("contact-list-members")
}

enum ContactListMemberStatus {
  SUBSCRIBED
  UNSUBSCRIBED
}
