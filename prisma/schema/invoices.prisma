model Invoice {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  user            User          @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userId          String        @db.ObjectId
  instructor      Instructor    @relation(fields: [instructorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  instructorId    String        @db.ObjectId
  paymentCharge   PaymentCharge @relation(fields: [paymentChargeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  paymentChargeId String        @db.ObjectId
  reference       String
  invoiceNumber   Int
  netAmount       Float
  grossAmount     Float
  vatAmount       Float
  vatRate         Float
  status          InvoiceStatus
  dueDate         DateTime
  paidAt          DateTime?
  companyInfo     CompanyInfo
  userInfo        UserInfo
  orderLines      OrderLine[]

  @@map("invoices")
}

type OrderLine {
  name        String
  quantity    Int
  price       Float
  vatRate     Float
  vatAmount   Float
  netAmount   Float
  grossAmount Float
}

enum InvoiceStatus {
  PENDING
  PAID
  REFUNDED
}

type UserInfo {
  name  String
  email String
  phone String
}

type CompanyInfo {
  name                         String
  address                      String
  city                         String
  zip                          String
  country                      String
  websiteUrl                   String
  contactEmail                 String
  contactPhone                 String
  businessIdentificationNumber String
}
