model SaasAffiliate {
  id             String                      @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime                    @default(now())
  updatedAt      DateTime                    @updatedAt
  referralCode   String                      @unique
  users          User[]
  referrals      SaasAffiliateReferral[]
  businessInfo   SaasAffiliateBusinessInfo
  contactInfo    SaasAffiliateContactInfo
  agreementTerms SaasAffiliateAgreementTerms
  status         SaasAffiliateStatus         @default(PENDING)
  transactions   SaasAffiliateTransaction[]

  @@map("saas-affiliates")
}

enum SaasAffiliateStatus {
  PENDING
  APPROVED
  REJECTED
}

type SaasAffiliateAgreementTerms {
  monthlyReferralAmount Int
  yearlyReferralAmount  Int
  trialPeriodDays       Int
}

type SaasAffiliateContactInfo {
  name         String
  contactEmail String
  contactPhone String
}

type SaasAffiliateBusinessInfo {
  name    String
  website String
  vatNo   String
}

model SaasAffiliateReferral {
  id              String                              @id @default(auto()) @map("_id") @db.ObjectId
  createdAt       DateTime                            @default(now())
  updatedAt       DateTime                            @updatedAt
  convertedAt     DateTime?                           @updatedAt
  trialExpiresAt  DateTime?
  meetingBookedAt DateTime?
  name            String?
  email           String?
  instructorId    String?                             @unique @db.ObjectId
  instructor      Instructor?                         @relation(fields: [instructorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  affiliateId     String                              @unique @db.ObjectId
  affiliate       SaasAffiliate                       @relation(fields: [affiliateId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  status          SaasAffiliateReferralStatus         @default(TRIALING)
  conversionType  SaasAffiliateReferralConversionType @default(NOT_CONVERTED)

  @@map("saas-affiliate-referrals")
}

enum SaasAffiliateReferralConversionType {
  NOT_CONVERTED
  MONTHLY_SUBSCRIPTION
  YEARLY_SUBSCRIPTION
}

enum SaasAffiliateReferralStatus {
  MEETING_BOOKED
  INVITED
  TRIALING
  CONVERTED
}

model SaasAffiliateTransaction {
  id          String                         @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime                       @default(now())
  updatedAt   DateTime                       @updatedAt
  paidAt      DateTime?                      @updatedAt
  affiliateId String                         @unique @db.ObjectId
  affiliate   SaasAffiliate                  @relation(fields: [affiliateId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  grossAmount Int
  netAmount   Int
  text        String
  status      SaasAffiliateTransactionStatus @default(AVAILABLE)

  @@map("saas-affiliate-transactions")
}

enum SaasAffiliateTransactionStatus {
  AVAILABLE
  PAID
}
