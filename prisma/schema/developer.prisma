model Webhook {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  type         WebhookType
  secret       String
  reference    String
  events       WebhookEvent[]
  instructor   Instructor     @relation(fields: [instructorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  instructorId String         @db.ObjectId
  isActive     Boolean        @default(true)
  name         String

  @@map("webhooks")
}

model WebhookEvent {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  webhook   Webhook  @relation(fields: [webhookId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  webhookId String   @db.ObjectId
  payload   Json
  error     String?
  completed Boolean  @default(false)

  @@map("webhook-events")
}

enum WebhookType {
  NEWSLETTER_SIGNUP
  SHOPIFY_NEW_ORDER_CALLBACK
  INVITE_USER_TO_PRODUCT
}
